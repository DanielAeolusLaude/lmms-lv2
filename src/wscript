#!/usr/bin/env python
import os
import shutil
import re
from waflib import Logs, TaskGen

dirs = 'envelope_generator lb303 sidemu triple_oscillator'

# Task for making plugin port 
def ttl2portfile (task):
    src = task.inputs[0].abspath()
    tgt = task.outputs[0].abspath()
    cmd = [task.env['TTL2PORTFILE'], src, tgt]
    return task.exec_command(cmd)

def configure (conf):
    conf.env['TTL2PORTFILE'] = conf.path.find_node('../tools/ttl2portfile.py').abspath()
    conf.recurse(dirs)

def build(bld):
    bundle     = 'lmms.lv2'
    installdir = os.path.join(bld.env.LV2DIR, bundle)

    # Plugin environment
    penv                   = bld.env.derive()
    penv['cshlib_PATTERN'] = bld.env['pluginlib_PATTERN']

    plugins = bld.env['PLUGINS']
    src     = ['basic_filters.c', 'blep.c', 'envelope.c', 'lfo.c', 'oscillator.c']
    templates = ['instrument.ttl', 'std_instrument.ttl']
    libs    = ['resid', 'lmms_util']

    objs    = plugins + libs

    bld.stlib(source=src, target='lmms_util', includes='.')
    bld(source=templates)
    bld.shlib(features='cxx',
              source='lmms_lv2.c',
              target='%s/lmms' % bundle,
              includes='.',
              use=objs,
              install_path=installdir,
              env=penv)

    bld(features='subst', source='manifest.ttl', target=os.path.join(bundle,'manifest.ttl'), install_path=installdir)

    bld.recurse(dirs)

TaskGen.declare_chain(name='ttl2portfile', rule=ttl2portfile, shell=False,
    ext_in='.ttl', ext_out='_ports.h', before='c cxx')

# vim: ts=8:sts=4:sw=4:et
